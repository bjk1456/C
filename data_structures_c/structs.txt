1. C
Question 1 
How is a C structure different from a Python dictionary?

Status: [object Object]
1 / 1 point

A C structure uses strings as keys to look up data


A C structure expands automatically as new data is added


All the members in a C structure must be the same type


The C structure allocates all of its data at the moment it is defined.

Correct
2. D
Question 2
What is the operator used in C structures to access a member value in a structure variable?

Status: [object Object]
1 / 1 point

The asterisk operator (*)


The ampersand operator (&)


The arrow operator (->)


The dot operator (.)

Correct
3. A
Question 3
What is the operator used in C structures to access a member value when you have a pointer to a structure?

Status: [object Object]
1 / 1 point

The arrow operator (->)


The dot operator (.)


The ampersand operator (&)


The asterisk operator (*)

Correct
4. A
Question 4
When you pass a structure (not a pointer to a structure) into a function, which of the following is true?

Status: [object Object]
1 / 1 point

The entire structure is copied into the stack frame (i.e. call by value)


A pointer to the structure is copied into the stack frame


When structures are being used, the stack frame is not involved


If you change the value of a member of a structure in a function, that value is changed in the calling context


You cannot pass structures into functions as parameters


All structures must be allocated with the "extern" storage class

Correct
5. D
Question 5
What happens to a stack frame when a C function returns?

Status: [object Object]
1 / 1 point

The contents of the stack frame are copied back into their corresponding variables in the calling context


The stack frame is copied into function-local storage and available in a later function call


The stack frame is moved to the former-stack area and later garbage collected


The stack frame is removed from the stack

Correct
6. C
Question 6
What is the printf() formatting code typically used to print pointer values?

Status: [object Object]
1 / 1 point

None of the above


%s


%p


%ld

Correct